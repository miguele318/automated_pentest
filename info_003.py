# -*- coding: utf-8 -*-

import time
import os
from subprocess import Popen, PIPE
from urllib.parse import urlparse


__otg__ = "OTG-INFO-003"

class INFO_003():
    

    def __init__(self, url,dependencia=None, riesgoNegocio=0.0):
        self.url = url
        self.ruta = os.getcwd()
        self.nombre = str(3) + "robots.txt"
        
    
    
    def test_robots(self,url):
        
        stdout = Popen("wget -q %s%s %s" % (url,"robots.txt","-O " + self.nombre), shell=True, stdout=PIPE).stdout
        

    def check_file(self):        
        #os.system("sudo chmod 777 " + self.ruta + "/robots.txt")
        
        if os.stat(self.ruta + "/" + self.nombre).st_size == 0:
            print("No ha sido posible encontrar el archivo robots.txt en la raíz de la aplicación")
        else:
            self.read_robots()


    def read_robots(self):
        res = ""
        with open (self.ruta + "/" + self.nombre,"r") as file:
            for line in file:
                res += line
                #print(line)
            
            print(res)
        file.close()

    def split_url(self,url):
        url_tmp = urlparse(url)
        u = url_tmp.scheme + "://" + url_tmp.netloc
        return u


    
    def verify_url(self,url):
        if url[-1] != "/":
            url += "/"
            return url
        else:
            return url  


    
    def delete_file(self):
        os.system("rm -r " + self.ruta + "/" + self.nombre)

    
    def main(self):
        # #url = "https://www.enmimaquinafunciona.com/"
        # #url = "http://www.vulnweb.com/"
        # url = "http://www.laxestereo.com/"
        #url = "http://www.unicauca.edu.co/versionP/"
        print("================ Iniciando prueba OTG-INFO-003 ==================\n")
        print("Detectando archivos para fuga de información ...\n")
        print(self.url)
        url_split  = self.split_url(self.url)
        url = self.verify_url(url_split)
        print("url format:{}".format(url))
        self.test_robots(url)
        time.sleep(3)
        self.check_file()
        #self.read_robots()
        #self.delete_file()
        
     
    
    #    if self.detalles.resultado != "":
            
            #self.adicionarRecomendaciones("Existen otros “robots maliciosos” que suelen buscar direcciones de correos o formularios para "
            #"hacer SPAM, que podrán acceder a los lugares que se haya prohibido si lo desean. Para "
            #"bloquear estos otros robots, se debe ingresar al fichero .htaccess.")
            #self.adicionarRecomendaciones("El archivo es público, lo que significa que cualquiera puede verlo con sólo teclear "
            #+url+"robots.txt, por tanto, si se utiliza archivos robots.txt para esconder "
            #"información privada, se debe utilizar un método más seguro como la protección con contraseña. ")
            #self.calcularRiesgo(__otg__ , riesgoNegocio=self.riesgoNegocio)


        print("================ Terminando prueba OTG-INFO-003 ==================\n")
        
otg_003 =INFO_003("http://www.google.com.co")
otg_003.main()