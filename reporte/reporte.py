from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A3, landscape
from reportlab.lib.units import cm
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.platypus import Paragraph, Table, TableStyle
from reportlab.lib.enums import TA_JUSTIFY, TA_LEFT, TA_CENTER
from reportlab.lib import colors


width, height = A3
styles = getSampleStyleSheet()
styleN = styles["BodyText"]
styleN.alignment = TA_LEFT
styleBH = styles["Normal"]
styleBH.alignment = TA_CENTER

def coord(x, y, unit=1):
    x, y = x * unit, width -  y * unit
    return x, y

# Headers
ID = Paragraph('''<b>ID</b>''', styleBH)
NOMBRE = Paragraph('''<b>NOMBRE</b>''', styleBH)
TOPTEN = Paragraph('''<b>TOP TEN</b>''', styleBH)
CATEGORIA = Paragraph('''<b>CATEGORIA</b>''', styleBH)
HERRAMIENTAS = Paragraph('''<b>HERRAMIENTAS</b>''', styleBH)
RESULTADOS = Paragraph('''<b>RESULTADOS</b>''', styleBH)
RECOMENDACIONES = Paragraph('''<b>RECOMENDACIONES</b>''', styleBH)

# Texts
F_ID = Paragraph('OTG-AUTHZ-003', styleN)
F_NOMBRE = Paragraph('Prueba para escalación de privilegios', styleN)
F_TOPTEN = Paragraph('A6:2017', styleN)
F_CATEGORIA = Paragraph('Configuración de Seguridad Incorrecta', styleN)
F_HERRAMIENTAS = Paragraph('Sqlmap, brutespray.py', styleN)
F_RESULTADOS = Paragraph('jadbajkdbvhjadmxnjv na;lcnbvkanlc.xm <br /> andnkj<br /> vkadvnbhskjcnv al;vnb adjcnvb jqjcnbv jkadmvebw nlkdjvebjn dwejvbwnmqdlvne bjadvenbij vnlwdnveb jwkqldfvbwjklfjnvebjs mwejvbnwlk vbwjkl fnjwkl vbeh bcnw cn jwkdmvjew nmwkevjn lwknek fmek', styleN)
F_RECOMENDACIONES = Paragraph('', styleN)


encabezado= [ID, NOMBRE,TOPTEN,CATEGORIA, HERRAMIENTAS, RESULTADOS,RECOMENDACIONES]
filas=[F_ID,F_NOMBRE, F_TOPTEN, F_CATEGORIA, F_HERRAMIENTAS, F_RESULTADOS, F_RECOMENDACIONES]

data=[]
data.append(encabezado)
for i in range(10):
    data.append(filas)


table = Table(data, colWidths=[3.50 * cm, 7 * cm, 2 * cm,
                               4* cm, 3.5 * cm, 9.5* cm, 9.5* cm])

table.setStyle(TableStyle([
                       ('INNERGRID', (0,0), (-1,-1), 0.25, colors.red),
                       ('BOX', (0,0), (-1,-1), 0.25, colors.blue)
                       ]))

T = Table(data, colWidths=[3.50 * cm, 7 * cm, 2 * cm,
                               4* cm, 3.5 * cm, 9.5* cm, 9.5* cm])

T.setStyle(TableStyle([
                       ('INNERGRID', (0,0), (-1,-1), 0.25, colors.black),
                       ('BOX', (0,0), (-1,-1), 0.25, colors.black),
                       ]))

c = canvas.Canvas("a.pdf", pagesize=landscape(A3))
table.wrapOn(c, height, width)
table.drawOn(c, 20,70)
"""T.wrapOn(c, height, width)
T.drawOn(c, *coord(1, 9, cm))"""
c.save()