#!/usr/bin/python3
# -*- encoding: utf-8 -*-

import requests
import time
from urllib.parse import urlparse
import shutil
import os


__otg__ = "OTG-CONFIG-007"

class Config_007():
    def __init__(self, url):
        self.url = url
        self.complejidad = 1
        self.resultado = ""
        self.recomendaciones = ""
        
    def verificarHSTS(self):

        r = requests.head(self.url)
        codigo_respuesta = r.status_code
        self.resultado +=("Código de respuesta: " + str(codigo_respuesta) + "<br />")

        codigos = [200, 301, 302, 403]

        if codigo_respuesta in codigos:

            try:
                cabecera = 'Strict-Transport-Security'
                self.resultado += ("<br />Buscando la cabecera HSTS (Strict-Transport-Security)<br />")
                time.sleep(1)

                sts = r.headers[cabecera]
                self.resultado += ("<br />Cabecera HSTS encontrada!<br />'%s' : %s<br />" % (cabecera, sts) + "<br />")
                self.recomendaciones += ("- Asegurece de mantener la configuración para que su información sea transportada de forma segura.<br />")
            except KeyError:
                self.resultado += "<br />HSTS no encontrado.<br />"
                self.recomendaciones = "La información puede navegar en texto plano, asegurece de configurar su aplicación para que la informacion sea cifrada antes de ser enviada.<br />"
                
        else:
                self.resultado = "Hubo un problema en establecer la comunicación.\nCódigo : %s.\n" % codigo_respuesta
 
 
    def reporte(self, id):
        ruta = os.getcwd() + '/informacion/'
        archivo_origen = 'config_007.txt'
        archivo_resultado = 'reportes/config_007_'+str(id)+'.txt'
        
        shutil.copyfile(ruta + archivo_origen, ruta + archivo_resultado)
        with open(ruta + archivo_resultado, 'a') as file:
            file.write('\n' + self.resultado.replace('\n', '<br />'))
            file.write('\n' + self.recomendaciones.replace('\n', '<br />'))
    
    
    def main(self, id):
        print("================ Inicio prueba OTG-CONFIG-007 ==================\n")
        u = urlparse(self.url)
        self.url = u.scheme + "://" + u.netloc + u.path
        self.verificarHSTS()

        print("================ Fin prueba OTG-CONFIG-007 ==================\n")
        self.reporte(id)


"""# url = "https://github.com/"
#url = "https://simca.unicauca.edu.co/simca/"
url="http://scanme.nmap.org/"  #TODO: SOLO URL

c = config_007(url)
c.main()
"""