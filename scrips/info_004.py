#!/usr/env/ python
# -*- encoding: utf-8 -*-

import os
from subprocess import Popen, PIPE
import time


#Abarca las pruebas info-004 y info-010

class Info_004():
    def __init__(self, dominio):
        
        self.salida = os.getcwd() + "/"
        self.complejidad = 1
        self.dominio = dominio
        self.name_file = "info_004_pscan.txt" #TODO:ACTUALIZAR EL IDENTIFICADOR DEL TEST 
        self.resultado = ""
        self.sinResultado = "No ha sido posible encontrar el archivo robots.txt en la raíz de la aplicación"
        self.recomendaciones = ""
        

 

    def port_scan(self,ip):
        self.resultado += "-----------------------------------------------------\n"
        self.resultado += "Detectando puertos, servicios y DNS ...\n\n"
        os.system("sudo nmap -f --mtu 24 -A " + ip + " | grep open > " + self.salida+self.name_file)
        #time.sleep(10)
    
    def dns_lookup(self,domain):
        self.resultado += "\n-----------------------------------------------------\n"
        self.resultado += "Descubriendo servidores de nombre de dominio ...\n\n"
        stdout = Popen("host " + domain, shell=True, stdout=PIPE).stdout
        #time.sleep(10)
        output_tmp = stdout.read()
        output = output_tmp.decode('ascii')
        self.resultado+=output

    
    def name_service(self,domain):
        self.resultado += "\n-----------------------------------------------------\n"
        self.resultado += "Detectando name services ...\n\n"
        stdout = Popen("host -t ns " + domain , shell=True, stdout=PIPE).stdout
        #time.sleep(10)
        output_tmp = stdout.read()
        output = output_tmp.decode('ascii')
        self.resultado +=output
    
    def read_file(self):
        with open (self.salida + self.name_file) as file:
            for line in file:
                self.resultado +=line 

        file.close()
        self.delete_file()

    def delete_file(self):
         os.system("sudo rm " + self.salida + self.name_file) 
       
    def main(self):
        print("================ Inicio prueba OTG-INFO-004 ==================\n")
  
        self.port_scan(self.dominio)
        self.read_file()
        self.dns_lookup(self.dominio)
        
        self.name_service(self.dominio)

        
        self.recomendaciones+=("\nSe recomienda configurar un firewall que permita filtrar los paquetes enviados por aplicaciones "
                                    "especializadas en escanear puertos, esto con el fin de hacer inalcanzable el análisis de los "
                                    "puertos y frustrar al atacante")
        
        print("================ Fin prueba OTG-INFO-004 ==================\n")

        return self.resultado, self.recomendaciones


"""dominio = "scanme.nmap.org"  #TODO:DOMINIO E IP
ip = "45.33.32.156"



obj=info_004(ip)
obj.main()"""