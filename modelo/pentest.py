#!/usr/bin/python3
# -*- encoding: utf-8 -*-

from src.modelo.conexion import ConexionDB
from src.modelo.singleton import Singleton

class Pentest(metaclass=Singleton):
    
    def __init__(self, id=0, url_ip=None, fecha_Ini=None, fecha_Fin=None, riesgo_general=0.0):
        self.id = id
        self.url_ip = url_ip
        self.fecha_Ini = fecha_Ini
        self.fecha_Fin = fecha_Fin
        self.riesgo_general = riesgo_general
    
    def updateFecha_ini(self, id):
        conn = ConexionDB()
        cur = conn.conn.cursor()

        update = "UPDATE pentest SET fecha_ini = statement_timestamp() WHERE id = %s"
        cur.execute(update, (id,))
        conn.conn.commit()

        cur.close()
        conn.desconectar()
    
    def updateFecha_fin(self, id):
        conn = ConexionDB()
        cur = conn.conn.cursor()

        update = "UPDATE pentest SET fecha_fin = statement_timestamp() WHERE id = %s"
        cur.execute(update, (id,))
        conn.conn.commit()

        cur.close()
        conn.desconectar()
    
    def updateRiesgo_general(self, id):
        conn = ConexionDB()
        cur = conn.conn.cursor()

        update = "UPDATE pentest SET riesgo_general = (SELECT AVG(riesgo) FROM detalle WHERE id_pentest = %s) WHERE id = %s"
        cur.execute(update, (id,id,))
        conn.conn.commit()

        cur.close()
        conn.desconectar()
    
    def getLastRecord(self):
        conn = ConexionDB()
        cur = conn.conn.cursor()
        query = "SELECT id, url_ip, fecha_ini, fecha_fin, riesgo_general FROM pentest ORDER BY id DESC LIMIT 1"
        cur.execute(query)
        row = cur.fetchone()

        cur.close()
        conn.desconectar()
        return row
        #return Pentest(row[0], row[1], row[2], row[3], row[4])

    def getAll(self):
        objs = list()

        conn = ConexionDB()
        cur = conn.conn.cursor()
        query = "SELECT id, url_ip, fecha_ini, fecha_fin, riesgo_general FROM pentest"
        cur.execute(query)
        rows = cur.fetchall()
        cur.close()
        conn.desconectar()

        for p in rows:
            objs.append(Pentest(p[0], p[1], p[2], p[3], p[4]))
        return objs

    def getById(self, idd):
        conn = ConexionDB()
        cur = conn.conn.cursor()

        query = "SELECT id, url_ip, fecha_ini, fecha_fin, riesgo_general FROM pentest WHERE id = %s"
        cur.execute(query, (idd,) )
        row = cur.fetchone()

        cur.close()
        conn.desconectar()
        return row
        