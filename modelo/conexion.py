#!/usr/bin/python3
# -*- encoding: utf-8 -*-

from configparser import ConfigParser
import psycopg2

class ConexionDB(object):
    
    def __init__(self, filename='database.ini', section='postgresql'):
        self.params = self.config(filename, section)
        self.conn = psycopg2.connect(**self.params)
    
    def config(self, filename, section):
        # create a parser
        parser = ConfigParser()
        # read config file
        parser.read(filename)

        # get section, default to postgresql
        db = {}
        if parser.has_section(section):
            params = parser.items(section)
            for param in params:
                db[param[0]] = param[1]
        else:
            raise Exception('Section {0} not found in the {1} file'.format(section, filename))
        return db
    
    def desconectar(self):
        if self.conn is not None:
            self.conn.close()
    
    def pruebaConexion(self):
        cur = self.conn.cursor()
        cur.execute('SELECT version()')
        db_version = cur.fetchone()
        print(db_version)
        cur.close()
        self.desconectar()
