#!/usr/bin/python3
# -*- encoding: utf-8 -*-
from datetime import datetime
from scrips import authz_003
from scrips import config_007
from scrips import config_008
from scrips import ident_004
from scrips import info_003
from scrips import info_004
from scrips import info_007
import os


class Pentest():
    
    def __init__(self, id=0, url=None, dominio=None, ip=None, pruebas=None):
        self.id = id
        self.url= url
        self.dominio = dominio
        self.ip = ip
        self.pruebas = pruebas
        self.fecha_Ini = None
        self.fecha_Fin = None
        self.resultados = []
        self.encabezado = ['ID', 'NOMBRE', 'TOPTEN', 'CATEGORIA',  'HERRAMIENTAS', 'RESULTADOS', 'RECOMENDACIONES']
    
    def fecha(self):
        fecha = datetime.now()
        return  fecha.strftime('Día :%d, Mes: %m, Año: %Y, Hora: %H, Minutos: %M, Segundos: %S')
    
    def read_file(self,name):
        
        info = []
        resultado = {}
        ruta = os.getcwd() + "/informacion/" + name + ".txt"
        with open (ruta) as file:
            for line in file:
                info.append(line.split('\n')[0])
        file.close()
        resultado = dict(zip(self.encabezado,info))
        return resultado
    
    def ejecutar(self):
        if 'info_003' in self.pruebas:
            objPrueba = info_003.Info_003(self.url)
            resultado, recomendaciones = objPrueba.main()
            informe = self.read_file('info_003')
            informe['RESULTADOS'] = resultado
            informe['RECOMENDACIONES'] = recomendaciones
            self.resultados.append(informe)


        if 'info_004' in self.pruebas:
            objPrueba = info_004.Info_004(self.dominio)
            resultado, recomendaciones = objPrueba.main()
            informe = self.read_file('info_004')
            informe['RESULTADOS'] = resultado
            informe['RECOMENDACIONES'] = recomendaciones
            self.resultados.append(informe)
            


        if 'info_007' in self.pruebas:
            objPrueba = info_007.Info_007(self.url)
            resultado, recomendaciones = objPrueba.main()
            informe = self.read_file('info_007')
            informe['RESULTADOS'] = resultado
            informe['RECOMENDACIONES'] = recomendaciones
            self.resultados.append(informe)
            

        if 'config_007' in self.pruebas:
            objPrueba = config_007.Config_007(self.url)
            resultado, recomendaciones = objPrueba.main()
            informe = self.read_file('config_007')
            informe['RESULTADOS'] = resultado
            informe['RECOMENDACIONES'] = recomendaciones
            self.resultados.append(informe)
        
        
        if 'config_008' in self.pruebas:
            objPrueba = config_008.Config_008(self.url)
            resultado, recomendaciones = objPrueba.main()
            informe = self.read_file('config_008')
            informe['RESULTADOS'] = resultado
            informe['RECOMENDACIONES'] = recomendaciones
            self.resultados.append(informe)           


        if 'ident_004' in self.pruebas:
            objPrueba = ident_004.Ident_004(self.dominio)
            resultado, recomendaciones = objPrueba.main()
            informe = self.read_file('ident_004')
            informe['RESULTADOS'] = resultado
            informe['RECOMENDACIONES'] = recomendaciones
            self.resultados.append(informe)




        if 'authz_003' in self.pruebas:
            objPrueba = authz_003.Authz_003(self.dominio)
            resultado, recomendaciones = objPrueba.main()
            informe = self.read_file('authz_003')
            informe['RESULTADOS'] = resultado
            informe['RECOMENDACIONES'] = recomendaciones
            self.resultados.append(informe)



        
    
        