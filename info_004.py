#!/usr/env/ python
# -*- encoding: utf-8 -*-

import os
from subprocess import Popen, PIPE
#from fabrica.otg import OTG


__otg__ = "OTG-INFO-004"

#Abarca las pruebas info-004 y info-010

class Info_004():
    def __init__(self, domain, dependencia=None, riesgoNegocio=0.0):
        
        self.salida = os.getcwd() + "/"
        self.complejidad = 1
        self.domain = domain
        self.name_file = "info_004_pscan_"+str(4)+".txt" #TODO:ACTUALIZAR EL IDENTIFICADOR DEL TEST 
        self.resultado=""
        

 

    def port_scan(self,ip):
        os.system("sudo nmap -f --mtu 24 -A " + ip + " | grep open > " + self.salida+self.name_file)
    
    def dns_lookup(self,domain):
        print("-----------------------------------------------------")
        print("Descubriendo servidores de nombre de dominio ...\n")
        stdout = Popen("host " + domain, shell=True, stdout=PIPE).stdout
        output_tmp = stdout.read()
        output = output_tmp.decode('ascii')
        #output = str(output_tmp)
        self.resultado+=output
        #print(output)
    
    def name_service(self,domain):
        print("-----------------------------------------------------")
        print("Detectando name services ...\n")
        stdout = Popen("host -t ns " + domain , shell=True, stdout=PIPE).stdout
        output_tmp = stdout.read()
        output = output_tmp.decode('ascii')
        #self.adicionarResultado(output)
        self.resultado +=output
    
    def read_file(self):
        with open (self.salida + self.name_file) as file:
            for line in file:
                self.resultado +=line 

            #print(res)
            #self.adicionarResultado(res)
        file.close()
       
    def main(self):
        print("================ Inicio prueba OTG-INFO-010 ==================\n")
        print("Detectando puertos, servicios y DNS ...\n")
        
    

        self.port_scan(self.domain)
        self.read_file()
        self.dns_lookup(self.domain)
        
        self.name_service(self.domain)

        if self.resultado !="":
            self.resultado+=("\nSe recomienda configurar un firewall que permita filtrar los paquetes enviados por aplicaciones"
                                        "especializadas en escanear puertos, esto con el fin de hacer inalcanzable el an√°lisis de los"
                                        "puertos y frustrar al atacante")
            print(self.resultado)
            """
            self.calcularRiesgo(__otg__, self.riesgoNegocio)

            self.almacenarBD()
        """
        print("================ Fin prueba OTG-INFO-010 ==================\n")



domain="google.com"
obj=Info_004(domain)
obj.main()